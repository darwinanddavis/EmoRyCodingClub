ot[,1] %>% as.data.frame()
ot[,1] %>% as.data.frame() %>%  plot_str(.)
ot[,1] %>% as.data.frame() %>%  plot_str(type="radial")
ot[,1] %>%  plot_str(type="radial")
data.frame(ot[,1]) %>%  plot_str(type="radial")
data.frame(data=ot[,1]) %>%  plot_str(type="radial")
data.frame("data"=ot[,1]) %>%  plot_str(type="radial")
data.frame("data"=ot[,1]) %>%  plot_str()
ot[,1] %>% list() %>% plot_str()
ot[,1] %>% list()
ot[,1] %>% list() %>% plot_str()
ot[,1] %>% list() %>% unlist %>% plot_str()
ot[,1] %>% list()[[1]] %>% plot_str()
ot[,1] %>% list()[1] %>% plot_str()
ot <- OlsonNames() %>% str_split_fixed("/",n = 2) %>% list()
ot
ot[2]
ot[1][2] %>% plot_str()
ot[1][2]
ot[[1]][2]
ot[[1]]
ot[[1]][[2]]
ot[1][2]
ot
ot <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- ot[,1] %>% list
ot <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- ot[,1] %>% list
ot
ot <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- ot[,1] %>% list %>% unique
ot
plot_str(ot)
plot_str(iris)
plot_str(iris,type="radial")
plot_str(OlsonNames(),type="radial")
plot_str(OlsonNames() %>% list,type="radial")
OlsonNames()[1]
plot_str(OlsonNames()[1],type="radial")
ot <- OlsonNames() %>% str_split_fixed("/",n = 2)
OlsonNames() %>% list
ot <- OlsonNames() %>% list
plot_str(ot,type="radial")
plot_str(ot)
ot <- OlsonNames() %>% map(list)
ot <- OlsonNames() %>% map(list())
ot <- OlsonNames() %>% list(list)
ot
OlsonNames() %>% map(as.list())
OlsonNames()[1:10] %>% map(as.list())
OlsonNames()[1:10]
OlsonNames() %>% map(list())
OlsonNames()[1:10] %>% map(list())
OlsonNames()
OlsonNames() %>% map(1)
OlsonNames()[1:10] %>% map(1)
OlsonNames()[1:10] %>% class
OlsonNames()[1:10] %>% list %>%  map(1)
OlsonNames()[1:10] %>% list
OlsonNames()[1:10] %>% list %>% map(list)
OlsonNames() %>% as.list()
OlsonNames() %>% as.list() %>% plot_str
OlsonNames() %>% as.list() %>% plot_str(type="radial")
OlsonNames() %>% as.list() %>% names(OlsonNames())
OlsonNames() %>% as.list() %>% map(names(OlsonNames()))
OlsonNames() %>% as.list() %>% map(names(OlsonNames))
ot <- OlsonNames() %>% as.list()
ot %>% head
ot %>% names(ot)
ot %>% names(ot %>% unlist)
ot %>% map(names(ot %>% unlist))
ot %>% names(map(op %>% unlist))
ot %>% names(map(ot %>% unlist))
ot %>% names(map(ot))
names(ot)
ot %>% unlist
names(ot) <- OlsonNames()
ot %>% plot_str(type="radial")
ot %>% plot_str(type="r",max_level = 2)
ot %>% plot_str(type="r",max_level = 1.5)
ot %>% plot_str(type="r",max_level = 0.2)
ot %>% plot_str(type="r",max_level = 0.4)
ot %>% plot_str(type="r",max_level = 2)
ot %>% plot_str(type="d",max_level = 2)
ot %>% plot_str(type="r")
require(DataExplorer)
ot <- OlsonNames() %>% as.list()
names(ot) <- OlsonNames()
ot %>% plot_str(type="r")
# OlsonNames() for complete list
ot <- OlsonNames() %>% sample(100) as.list()
ot <- OlsonNames() %>% sample(100) %>%  as.list()
names(ot) <- OlsonNames()
OlsonNames() %>% sample(20)
set.seed(3)
require(DataExplorer)
ot <- OlsonNames() %>% sample(20) %>%  as.list()
names(ot) <- OlsonNames() %>% sample(20)
ot %>% plot_str(type="r")
set.seed(3)
require(DataExplorer)
ot <- OlsonNames() %>% sample(200) %>%  as.list()
names(ot) <- OlsonNames() %>% sample(200)
ot %>% plot_str(type="r")
ot <- OlsonNames() %>% as.list()
split(ot,5)
OlsonNames() %>% str_split_fixed("/",n = 1)
OlsonNames() %>% str_split_fixed("/",n = 2)
oo <- OlsonNames() %>% str_split_fixed("/",n = 2)
oo[,1]
split(ot,oo[,1])
ot <- OlsonNames() %>% as.list()
oo <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- split(ot,oo[,1])
names(ot) <- OlsonNames()
ot %>% str
ot %>% plot_str(type="r")
ot %>% plot_str(type="d")
ot <- OlsonNames() %>% as.list("Time zones" = .)
ot <- OlsonNames() %>% as.list("Time zones")
ot
ot %>% str
ot <- OlsonNames() %>% as.list("Time zones" = (.))
ot %>% str
ot %>% names
ot <- OlsonNames() %>% as.list
oo <- OlsonNames() %>% str_split_fixed("/",n = 2) %>% as.list
oo
ot <- OlsonNames() %>% as.list
ot
ot <- OlsonNames() %>% as.list
oo <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- split(OlsonNames() %>% as.list,oo[,1])
ot %>% plot_str(type="r")
ot %>% head
ot %>% names
ot %>% map(names(1))
ot %>% map(names(OlsonNames()))
ot %>% names(map(OlsonNames()))
ot %>% plot_str(type="r")
ot <- OlsonNames() %>% as.list
ot <- as.list(OlsonNames() = OlsonNames())
ot <- OlsonNames() %>% as.list
names(ot) <- OlsonNames()
oo <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- split(ot,oo[,1])
ot %>% plot_str(type="r")
ot <- OlsonNames() %>% as.list
names(ot) <- OlsonNames()
oo <- OlsonNames() %>% str_split_fixed("/",n = 2)
ot <- split(ot,oo[,1])
OlsonNames() %>% sample(100)
OlsonNames() %>% sample(20)
now() # current time
today() # today's date
now() # current time
ft %>% list(
isoyear(.), # international standard date-time code (ISO 8601)
epiyear(.), # epidemiological year
wday(.), # weekday
wday(.,label = T), # weekday as label
qday(.), # day into yearly quarter
week(.), # week of year
semester(.), # semester
am(.), pm(.) # AM or PM?
) %>% names(LETTERS[1:9])
ft %>% list(
isoyear(.), # international standard date-time code (ISO 8601)
epiyear(.), # epidemiological year
wday(.), # weekday
wday(.,label = T), # weekday as label
qday(.), # day into yearly quarter
week(.), # week of year
semester(.), # semester
am(.), pm(.) # AM or PM?
) %>% names() -> LETTERS[1:9]
ftl <- ft %>% list(
isoyear(.), # international standard date-time code (ISO 8601)
epiyear(.), # epidemiological year
wday(.), # weekday
wday(.,label = T), # weekday as label
qday(.), # day into yearly quarter
week(.), # week of year
semester(.), # semester
am(.), pm(.) # AM or PM?
)
names(ftl) -> LETTERS[1:9]
LETTERS[1:9]
ftl <- ft %>% list(
isoyear(.), # international standard date-time code (ISO 8601)
epiyear(.), # epidemiological year
wday(.), # weekday
wday(.,label = T), # weekday as label
qday(.), # day into yearly quarter
week(.), # week of year
semester(.), # semester
am(.), pm(.) # AM or PM?
)
names(ftl) <- LETTERS[1:9]
ftl
ftl <- ft %>% list(
isoyear(.),
epiyear(.),
wday(.),
wday(.,label = T),
qday(.),
week(.),
semester(.),
am(.),
pm(.)
)
names(ftl) <- c(
"international standard date-time code (ISO 8601)",
"epidemiological year",
"weekday",
"weekday as label",
"day into yearly quarter",
"week of year",
"semester",
"AM?",
"PM?"
)
ftl
now()
Sys.time() %>% day
rmarkdown::render_site()
?read_csv2
?read_csv
?read_fwf
?read_tsv
?read_table()
url <- "https://r4ds.had.co.nz/index.html"
?read_html
??read_html
url %>% read_html %>% html_table(header = NA,trim = T)
require(rvest)
require(xml2)
url <- "https://r4ds.had.co.nz/index.html"
url %>% read_html %>% html_table(header = NA,trim = T)
url %>% read_html %>% html_table(trim = T)
url %>% read_html
node
node <- function(x)url %>% read_html %>% html_node(trim = T)  # get just tables
node <- function(x)x %>% read_html %>% html_node(trim = T)  # get just tables
node(url)
node <- function(x){
x %>% read_html %>% html_node(trim = T)  # get just tables
}
node(url)
url <- "https://r4ds.had.co.nz/index.html" # url to scrape
node <- function(x){
x %>% read_html %>% html_node(trim = T)  # get just tables
}
node(url)
url %>% read_html %>% html_node(trim = T)  # get just tables
url
url %>% read_html
n
node <- function(n){
url %>% read_html %>% html_node(n)  # get just tables
}
node("table")
node("a")
node("href")
node <- function(n){
url %>% read_html %>% html_nodes(n)  # get just tables
}
node("href")
node("a")
node("table")
url %>% read_html %>% html_table(trim = T)  # get just tables
node("a")
node("a") %>% html_nodes("href")
node("a") %>% html_node("href")
node("a")
node("a") %>% html_attr("href")
node <- function(n){
url %>% read_html %>% html_node(n)  # get just tables
}
node("a") %>% html_attr("href")
node <- function(n){
url %>% read_html %>% html_nodes(n)  # get just tables
}
node("a") %>% html_attr("href")
node("a")
url <- "https://r4ds.had.co.nz/data-visualisation.html" # url to scrape
node <- function(n){
url %>% read_html %>% html_nodes(n)  # get just tables
}
node("a") %>% html_attr("href")
node("a")
node("table")
node("h1")
node("h2")
node("h3")
node("h4")
node("h5")
node("h1")
node("h2")
node("h2") #
node("pre")
node("pre") %>% html_attr("code")
node("pre")
node("code")
node("code") %>% html_attr("ggplot2")
node("code") %>% html_nodes("ggplot2")
node("code")
node("code") %>% html_nodes("code")
node("code") %>% html_node("code")
node("code")
node("code") %>% html_attr("code")
node("code")
node("code") %>% html_attr("pre")
node("code") %>% html_attr("a")
node("code") %>% html_attr("href")
node("code") %>% html_attr("span")
node("code") %>% html_nodes("span")
node("code") %>% html_nodes("a")
node("code") %>% html_nodes("code")
node("code") %>% html_nodes("span")
node("code") %>% html_nodes("a")
node("code") %>% html_nodes("a") %>% html_nodes("span")
node("code") %>% html_nodes("a") %>% html_nodes("#&gt")
node("code") %>% html_nodes("a") %>% html_nodes("code")
node("code") %>% html_node("a")
node("code") %>% html_nodes("a")
node("code") %>% html_nodes("a") %>% html_attr("code")
node("code") %>% html_nodes("a")
node("code") %>% html_nodes("a") %>% html_node("span")
node("code")
url %>% read_html %>% html_attrs("code")
url %>% read_html %>% html_attrs()
url %>% read_html %>% html_attr()
url %>% read_html %>% html_attr("code")
node("code")
node <- function(n){
url %>% read_html %>% html_node(n)  # get just tables
}
node("code")
node <- function(n){
url %>% read_html %>% html_nodes(n)  # get just tables
}
node("code")
node("code") %>% html_nodes("code")
node("code") %>% html_attr("code")
node("code") %>% html_attr("code") %>% unlist
node("code") %>% unlist
node("code") %>% html_text(trim = T)
node("code")
node("code") %>% html_text(trim = T)
node("code") %>% html_text(trim = T) %>% head
node("code") %>% html_text(trim = T)
node("code") %>% html_text(trim = T) %>% unique
node("code") %>% html_text(trim = T) %>% unique %>% head
node("code") %>% html_text(trim = T) %>% unique %>% .[[10]]
node("code") %>% html_text(trim = T) %>% unique %>% :N
node("code") %>% html_text(trim = T) %>% unique %>%
node("code") %>% html_text(trim = T) %>% unique
node("code") %>% html_text(trim = T) %>% unique %>% head(10)
url %>% read_html %>% html_table(trim = T)  # get just tables
url %>% read_html %>% html_attr("a")
url %>% read_html %>% html_attr("h1")
url %>% read_html %>% node("img")
url %>% read_html %>% html_node("img")
url %>% read_html %>% html_nodes("img")
url %>% read_html %>% html_nodes("strong")
url %>% read_html %>% html_nodes("strong") %>% html_text(trim=T)
node("h1") # get second order headings
node("h2") # get second order headings
node("strong") %>% html_text(trim=T)
node("h2")%>% html_text(trim=T) # get second order headings
node("h2") %>% html_text(trim=T)
node("strong") %>% html_text(trim=T) # get just bold text in webpage
url <- "https://www.imdb.com/title/tt8515016/"
url %>% read_html %>% html_table(trim = T)  # get just tables
node("table")
url %>% read_html %>% html_nodes("h1") # get just images
url <- "https://r4ds.had.co.nz/data-visualisation.html" # url to scrape
url %>% read_html %>% html_nodes("h3") # get section headings
url %>% read_html %>% html_node("h3") # get section headings
url %>% read_html
url %>% read_html %>% html_nodes("blockquote")
nodes("blockquote") %>% html_text()
node("blockquote") %>% html_text()
node("blockquote") %>% html_text() %>% str_view_all
require(stringr)
node("blockquote") %>% html_text() %>% str_view_all
node("blockquote") %>% html_text() %>% str_view(" ")
node("blockquote") %>% html_text() %>% str_view("")
node("blockquote") %>% html_text() %>% str_view_all("")
node("blockquote") %>% html_text()
node("blockquote") %>% html_text(trim = T)
node <- function(n){
url %>% read_html %>% html_nodes(n)  # get just tables
}
url <- "https://www.imdb.com/title/tt8515016/"
url %>% read_html %>% html_table(trim = T)  # get just tables
node("table")
node("img")
node("img") %>% .[[3]]
node("img") %>% html_attr("src")
node("img")
node("img") %>% map(3)
node("img") %>% map(3) %>% html_attr("src")
require(purrr)
node("img") %>% map(3) %>% html_attr("src")
node("img") %>% map(1)
node("img")
node("img") %>% class
node("img") %>% .[[3]] %>% html_attr("src")
require(ggplot2)
node("img") %>% .[[3]] %>% html_attr("src") %>%
ggplot()
?image_read
??image_read
require(ggimage)
node("img") %>% .[[3]] %>% html_attr("src") %>%
image_read2
node("img") %>% .[[3]] %>% html_attr("src") %>% image_read(cut_empty_space = T)
?image_read2
node("img") %>% .[[3]] %>% html_attr("src") %>% magick::image_read(cut_empty_space = T)
node("img") %>% .[[3]] %>% html_attr("src") %>% magick::image_read()
?magick::image_read()
node("img") %>% .[[3]] %>% html_attr("src") %>% magick::image_display()
require(magick)
url %>% read_html %>% html_table(trim = T)  # get just tables
node("img") %>% .[[3]] %>% html_attr("src") %>% image_read_svg(width = "1000")
node("img") %>% .[[3]] %>% html_attr("src") %>% image_read_svg(width = 1000)
node("img") %>% .[[3]] %>% html_attr("src") %>% image_read_svg()
node("img") %>% .[[3]] %>% html_attr("src")
node("img") %>% .[[3]] %>% html_attr("a")
node("img") %>% .[[3]]
node("a")
node("a") %>% node("img")
node("img") %>% .[[3]] %>% html_attr("a")
node("img") %>% .[[3]]
node("src")
node("img") %>% .[[3]] %>% html_attr("src") %>% image_capture()
node("img") %>% .[[3]] %>% html_attr("src") %>% image_read()
url <- https://r4ds.had.co.nz/index.html
url <- "https://r4ds.had.co.nz/index.html"
node("img")
node("img") %>% html_attr("src")
node("img") %>% html_attr("src") %>% image_read()
url %>% read_html %>% html_attr("img") # get just images
url %>% read_html %>% html_attr("h1") # get just images
url %>% read_html
url %>% read_html %>%  html_nodes("h1") %>% html_attr("h1")
url %>% read_html %>%  html_nodes("h3")
url %>% read_html %>% html_nodes("h3") # get section headings
url <- "https://r4ds.had.co.nz/data-visualisation.html" # url to scrape
url %>% read_html %>% html_nodes("h3") # get section headings
url %>% read_html %>% html_nodes("h3") %>% html_attr("h1")
url %>% read_html %>% html_nodes("h3")
url %>% read_html %>% html_nodes("h3") %>% html_attr("h3")
url %>% read_html %>% html_nodes("h3")
url %>% read_html %>% html_nodes("h3") %>% html_attr("span")
url %>% read_html %>% html_attr("h3")
url %>% read_html %>% html_nodes("h3")
url %>% read_html %>% html_nodes("img") # get just images
node("h3") %>% html_attr("span")
node("h3")
node("h2") %>% html_attr("span")
node("h2")
node("h2") %>% html_attr("h2")
node("h2") %>% html_attr("span")
node("h2") %>% html_attr("\n")
url <- "https://www.imdb.com/title/tt8515016/"
nodes("table")
node("table")
node("table") %>% html_attr("tr")
node("table")
node("table") %>% html_attr("td")
node
node("table") %>% html_node("tr")
node("table") %>% html_node("td")
node("table") %>% html_node("td") %>% html_attr("4")
node("table") %>% html_node("td") %>% html_attr(4)
node("table") %>% html_node("td")
url <- "https://r4ds.had.co.nz/data-visualisation.html" # url to scrape
url <- "https://www.imdb.com/title/tt8515016/"
node("table") %>% html_node("td")
url <- "https://r4ds.had.co.nz/index.html"
node("a")
node("a") %>% html_attr("href")
node("section")
node("section") %>% html_attr("a")
node("section") %>% html_node("a")
node("section") %>% html_nodes("a")
url <- "https://r4ds.had.co.nz/index.html"
url <- "https://www.imdb.com/title/tt8515016/"
url %>% read_html %>% html_table(trim = T)  # get just tables
url <- "https://r4ds.had.co.nz/index.html"
node("a") %>% html_attr("href")
node("section") %>% html_nodes("href")
node("section")
node("section") %>% html_nodes("href")
node("section") %>% html_nodes("a")
node("a") %>% html_nodes("href")
node("a")
node("section") %>% html_nodes("a")
node("section") %>% html_nodes("href")
node("a") %>% html_nodes("href")
node("a")
node("section") %>% html_nodes("a")
node("section") %>% html_nodes("a") %>% html_attr("href")
node("section") %>% html_nodes("a") %>% html_text()
node("section") %>% html_nodes("a") %>% html_attr("href")
node("section") %>% html_nodes("a") %>% html_text()
require(magick)
node("img") %>% html_attr("src") %>% image_read()
rmarkdown::render_site()
